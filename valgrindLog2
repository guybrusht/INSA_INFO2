[guybrusht@ArchLaptop ProjetINFO]$ valgrind --leak-check=full ./a.out < crashTest.dat 
==10212== Memcheck, a memory error detector
==10212== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==10212== Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info
==10212== Command: ./a.out
==10212== 

 *******************************************************
 *                                                     *
 *           Resolution de A x = B                     *
 *                                                     *
 *******************************************************
 *                                                     *
 *   Precisez si A est :                               *
 *                                                     *
 *   0 => non symetrique (resolution par LU+Gauss)     *
 *   1 => symetrique (resolution par Cholesky+Gauss)   *
 *                                                     *
 *******************************************************

 *   Choix :  *   Nombre d'equations :
 *   N = 
 *   Donner les valeurs de A: 
 *   /!\ Attention: seules les valeurs du triangle inferieur sont a entrer,
 *   c'est-a-dire A[0][0], A[1][0], A[1][1], A[2][0], ...
 >    >    >    >    >    >    >    >    >    >   
############# Matrice ( A ) 
[       +1.000000       +1.000000       +1.000000       +1.000000       ]
[       +1.000000       +5.000000       +5.000000       +5.000000       ]
[       +1.000000       +5.000000       +14.000000      +14.000000      ]
[       +1.000000       +5.000000       +14.000000      +15.000000      ]


 *   Donner les valeurs pour le vecteur B: 
 >    >    >    >   
############# Matrice ( B ) 
[       +21.000000      ]
[       +81.000000      ]
[       +99.000000      ]
[       +99.000000      ]

La decomposition Cholesky donne la matrice C suivante:
############# Matrice ( A_Cholesky ) 
[       +1.000000       +0.000000       +0.000000       +0.000000       ]
[       +1.000000       +2.000000       +0.000000       +0.000000       ]
[       +1.000000       +2.000000       +3.000000       +0.000000       ]
[       +1.000000       +2.000000       +3.000000       +1.000000       ]

La resolution par Gauss donne la matrice Y suivante:
############# Matrice ( Solution[A_Cholesky*(?)=B] ) 
[       +21.000000      ]
[       +30.000000      ]
[       +6.000000       ]
[       +0.000000       ]


############# Matrice ( A_Cholesky transposee ) 
[       +1.000000       +1.000000       +1.000000       +1.000000       ]
[       +0.000000       +2.000000       +2.000000       +2.000000       ]
[       +0.000000       +0.000000       +3.000000       +3.000000       ]
[       +0.000000       +0.000000       +0.000000       +1.000000       ]

La resolution par Gauss donne la matrice X suivante:
############# Matrice ( SOLUTION FINALE ) 
[       +6.000000       ]
[       +13.000000      ]
[       +2.000000       ]
[       +0.000000       ]

Liberation memoire de A_Cholesky transposee... OK!
Liberation memoire de Solution[A_Cholesky*(?)=B]... OK!
Liberation memoire de A_Cholesky... OK!





 *   Passage a la phase de verification.
 *   Calcul du produit y=Ax
############# Matrice ( A * SOLUTION FINALE ) 
[       +21.000000      ]
[       +81.000000      ]
[       +99.000000      ]
[       +99.000000      ]

Liberation memoire de A * SOLUTION FINALE... OK!
Liberation memoire de SOLUTION FINALE... OK!
Liberation memoire de A... OK!
==10212== 
==10212== HEAP SUMMARY:
==10212==     in use at exit: 368 bytes in 3 blocks
==10212==   total heap usage: 27 allocs, 24 frees, 3,248 bytes allocated
==10212== 
==10212== 368 (304 direct, 64 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==10212==    at 0x4C2541D: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10212==    by 0x400BFE: creer_matrice (func.c:30)
==10212==    by 0x400A51: main (main.c:271)
==10212== 
==10212== LEAK SUMMARY:
==10212==    definitely lost: 304 bytes in 1 blocks
==10212==    indirectly lost: 64 bytes in 2 blocks
==10212==      possibly lost: 0 bytes in 0 blocks
==10212==    still reachable: 0 bytes in 0 blocks
==10212==         suppressed: 0 bytes in 0 blocks
==10212== 
==10212== For counts of detected and suppressed errors, rerun with: -v
==10212== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 7 from 7)
